package com.example.seedlingapp

import android.content.Context
import android.os.Bundle
import android.text.Editable
import android.text.TextWatcher
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.AdapterView
import android.widget.ArrayAdapter
import android.widget.ListView
import android.widget.Toast
import androidx.fragment.app.Fragment
import com.mancj.materialsearchbar.MaterialSearchBar

// TODO: Rename parameter arguments, choose names that match
// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
private const val ARG_PARAM1 = "param1"
private const val ARG_PARAM2 = "param2"

/**
 * A simple [Fragment] subclass.
 * Use the [Info.newInstance] factory method to
 * create an instance of this fragment.
 */
class InfoFragment : Fragment() {
    // TODO: Rename and change types of parameters
    private var param1: String? = null
    private var param2: String? = null

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        arguments?.let {
            param1 = it.getString(ARG_PARAM1)
            param2 = it.getString(ARG_PARAM2)
        }
    }
    var mContext: Context? = null
    override fun onAttach(context: Context) {
        super.onAttach(context)
        mContext = context
    }

    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
        // Inflate the layout for this fragment
        val v : View = inflater.inflate(R.layout.fragment_info, container, false)

        val lv = v.findViewById(R.id.mListView) as ListView
        val searchBar = v.findViewById(R.id.searchBar) as MaterialSearchBar
        searchBar.setHint("Search...")
        searchBar.setSpeechMode(true)



        var borough = arrayOf("Camden","Kensington and Chelsea","Hammersmith and Fulham")
        val adapter = ArrayAdapter<String> (inflater.getContext(),android.R.layout.simple_list_item_1, borough)
        lv.setAdapter(adapter)

        searchBar.addTextChangeListener(object: TextWatcher {
            override fun beforeTextChanged(charSequence : CharSequence,i: Int, i1:Int, i2:Int){

            }
            override fun onTextChanged(charSequence : CharSequence,i: Int, i1:Int, i2:Int){
                adapter.getFilter().filter(charSequence)

            }
            override fun afterTextChanged(editable: Editable){

            }

        })

        lv.setOnItemClickListener(object: AdapterView.OnItemClickListener{
            override fun onItemClick(adapterView: AdapterView<*>?,
                                     view: View,
                                     i: Int,
                                     l: Long){
                Toast.makeText(inflater.getContext(), adapter.getItem(i)!!.toString(),Toast.LENGTH_SHORT).show()
            }

        })

        return v
    }

    companion object {
        /**
         * Use this factory method to create a new instance of
         * this fragment using the provided parameters.
         *
         * @param param1 Parameter 1.
         * @param param2 Parameter 2.
         * @return A new instance of fragment Info.
         */
        // TODO: Rename and change types and number of parameters
        @JvmStatic
        fun newInstance(param1: String, param2: String) =
                InfoFragment().apply {
                    arguments = Bundle().apply {
                        putString(ARG_PARAM1, param1)
                        putString(ARG_PARAM2, param2)
                    }
                }
    }
}
